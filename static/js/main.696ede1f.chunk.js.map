{"version":3,"sources":["components/navigation.jsx","components/header.jsx","components/mission.jsx","components/about.jsx","components/Team.jsx","components/contact.jsx","components/node-background/background.js","App.jsx","useIntersectionObserver.js","serviceWorker.js","fonts/quint_lower.ttf","fonts/quint-uppercase-font.otf","index.js"],"names":["Navigation","props","id","className","type","data-toggle","data-target","href","src","alt","Header","data","title","paragraph","Mission","icons","map","d","i","style","animationDelay","icon","text","About","loading","Why","Team","members","img","name","job","Contact","useState","email","source","formData","setFormData","submitStatus","setSubmitStatus","isSubmitting","setIsSubmitting","handleWaitlistSubmit","e","a","preventDefault","callbackName","Date","now","script","document","createElement","jsonpPromise","Promise","resolve","reject","window","response","body","removeChild","onerror","Error","params","URLSearchParams","callback","trim","toString","appendChild","result","console","error","handleChange","target","value","prev","onSubmit","htmlFor","placeholder","onChange","disabled","required","option","index","includes","address","linkedin","rel","researchgate","color","Background","particlesInit","main","loadFull","init","options","background","fpsLimit","interactivity","events","onHover","enable","mode","resize","modes","push","quantity","repulse","distance","duration","maxSpeed","speed","particles","links","opacity","width","fullScreen","collisions","move","direction","outModes","default","random","straight","number","density","area","shape","size","min","max","detectRetina","App","SmoothScroll","speedAsDuration","landingPageData","setLandingPageData","useEffect","JsonData","observer","IntersectionObserver","entries","forEach","entry","isIntersecting","classList","add","threshold","sections","querySelectorAll","section","observe","unobserve","menu","Features","Boolean","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.696ede1f.chunk.js","sourcesContent":["export const Navigation = (props) => {\r\n  return (\r\n    <nav id=\"menu\" className=\"navbar navbar-default navbar-fixed-top\">\r\n      <div className=\"container\">\r\n        <div className=\"navbar-header\">\r\n          <button\r\n            type=\"button\"\r\n            className=\"navbar-toggle collapsed\"\r\n            data-toggle=\"collapse\"\r\n            data-target=\"#bs-example-navbar-collapse-1\"\r\n          >\r\n            {\" \"}\r\n            <span className=\"sr-only\">Toggle navigation</span>{\" \"}\r\n            <span className=\"icon-bar\"></span>{\" \"}\r\n            <span className=\"icon-bar\"></span>{\" \"}\r\n            <span className=\"icon-bar\"></span>{\" \"}\r\n          </button>\r\n          <div className=\"row page-scroll\" href=\"#page-top\">\r\n            <a className=\"navbar-brand page-scroll\" href=\"#page-top\">\r\n              Kausal\r\n            </a>\r\n            <img src=\"img/logos/logo_steel_blue.png\" className=\"navbar-logo\" alt=\"Kausal Logo\" />\r\n          </div>\r\n        </div>\r\n\r\n        <div\r\n          className=\"collapse navbar-collapse\"\r\n          id=\"bs-example-navbar-collapse-1\"\r\n        >\r\n          <ul className=\"nav navbar-nav navbar-right\">\r\n            <li>\r\n              <a href=\"#features\" className=\"page-scroll\">\r\n                Our Mission\r\n              </a>\r\n            </li>\r\n            <li>\r\n              <a href=\"#about\" className=\"page-scroll\">\r\n                About\r\n              </a>\r\n            </li>\r\n            <li>\r\n              <a href=\"#team\" className=\"page-scroll\">\r\n                Team\r\n              </a>\r\n            </li>\r\n            <li>\r\n              <a href=\"#contact\" className=\"page-scroll\">\r\n                Contact\r\n              </a>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n","export const Header = (props) => {\r\n  return (\r\n    <header id=\"header\">\r\n      <div className=\"intro\">\r\n        <div className=\"overlay\">\r\n          <div className=\"container\">\r\n            <div className=\"row\">\r\n              <div className=\"col-md-8 col-md-offset-2 intro-text\">\r\n                <h1>\r\n                  <div className=\"font-face-qu\">\r\n                    {props.data ? props.data.title : \"Loading\"}\r\n                  </div>\r\n                  <span></span>\r\n                </h1>\r\n                <p className=\"font-face-ql\">\r\n                  {props.data ? props.data.paragraph : \"Loading\"}\r\n                </p>\r\n                <a\r\n                  href=\"#features\"\r\n                  className=\"btn btn-custom btn-lg page-scroll\"\r\n                >\r\n                  Learn More\r\n                </a>{\" \"}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </header>\r\n  );\r\n};\r\n","export const Mission = (props) => {\r\n  return (\r\n    <div id=\"features\">\r\n      <div className=\"container\">\r\n        <div className=\"col-md-10 col-md-offset-1 section-title\">\r\n          <h2>Our Mission</h2>\r\n        </div>\r\n        <div className=\"features-text\">\r\n          <p>{props.data ? props.data.paragraph : \"Loading\"}</p>\r\n        </div>\r\n        <div className=\"row icons animate-on-scroll\">\r\n          {props.data\r\n            ? props.data.icons.map((d, i) => (\r\n              <div key={`${d.title}-${i}`} className=\"col-xs-6 col-md-3\" style={{ animationDelay: `${i * 0.2}s` }}>\r\n                {\" \"}\r\n                <i className={d.icon}></i>\r\n                <h3>{d.title}</h3>\r\n                <p>{d.text}</p>\r\n              </div>\r\n            ))\r\n            : \"Loading...\"}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","export const About = (props) => {\r\n\r\n  return (\r\n    <div id=\"about\">\r\n      <div className=\"about-container\">\r\n        <div className=\"about-content\">\r\n          <img\r\n            src=\"img/about.jpg\"\r\n            className=\"about-image\"\r\n            alt=\"petro_chem_image\"\r\n            loading=\"lazy\"\r\n          />\r\n          <div className=\"about-text\">\r\n            <h2>Reducing Your Maintenance Costs</h2>\r\n            <p>{props.data ? props.data.paragraph : \"loading...\"}</p>\r\n          </div>\r\n          <div className=\"about-text\">\r\n            <h3>What makes Kausal Different?</h3>\r\n            <div className=\"offerings-list\">\r\n              <ul>\r\n                {props.data\r\n                  ? props.data.Why.map((d, i) => (\r\n                    <li key={`${d}-${i}`}>\r\n                      {d}\r\n                    </li>\r\n                  ))\r\n                  : \"loading\"}\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};","export const Team = (props) => {\r\n  return (\r\n    <div id=\"team\" className=\"text-center\">\r\n      <div className=\"container\">\r\n        <div className=\"col-md-8 col-md-offset-2 section-title\">\r\n          <h2>Meet the Team</h2>\r\n          <p>{props.data ? props.data.paragraph : \"Loading...\"}</p>\r\n        </div>\r\n        <div className=\"images\">\r\n          {props.data\r\n            ? props.data.members.map((d, i) => (\r\n              <div\r\n                key={`${d.name}-${i}`}\r\n                className=\"col-lg-6 col-md-6 col-sm-6\"\r\n              >\r\n                <div className=\"thumbnail\">\r\n                  <img src={d.img} alt=\"...\" />\r\n                  <div className=\"caption\">\r\n                    <h4>{d.name}</h4>\r\n                    <p>{d.job}</p>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            ))\r\n            : \"loading\"}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","// import { useState } from \"react\";\r\n\r\n// export const Contact = (props) => {\r\n//   const [waitlistEmail, setWaitlistEmail] = useState(\"\");\r\n//   const [submitStatus, setSubmitStatus] = useState(\"\");\r\n//   const [isSubmitting, setIsSubmitting] = useState(false);\r\n\r\n//   const handleWaitlistSubmit = async (e) => {\r\n//     e.preventDefault();\r\n//     setSubmitStatus(\"\");\r\n//     setIsSubmitting(true);\r\n\r\n//     // Create a unique callback name\r\n//     const callbackName = 'jsonpCallback' + Date.now();\r\n\r\n//     // Create script element\r\n//     const script = document.createElement('script');\r\n//     const scriptURL = 'https://script.google.com/macros/s/AKfycbwolUhr0Mf6IfEiV3YArvjojczFSU4PGwh9TB_pTLyR59ggMRBNjfQUcgOnSz-32I9J6Q/exec'; // Your Google Apps Script URL\r\n\r\n//     // Create promise to handle the JSONP response\r\n//     const jsonpPromise = new Promise((resolve, reject) => {\r\n//       // Define callback function\r\n//       window[callbackName] = (response) => {\r\n//         resolve(response);\r\n//         // Cleanup\r\n//         delete window[callbackName];\r\n//         document.body.removeChild(script);\r\n//       };\r\n\r\n//       // Setup script error handling\r\n//       script.onerror = () => {\r\n//         reject(new Error('Script load failed'));\r\n//         // Cleanup\r\n//         delete window[callbackName];\r\n//         document.body.removeChild(script);\r\n//       };\r\n//     });\r\n\r\n//     // Set script source with callback parameter\r\n//     script.src = `${scriptURL}?callback=${callbackName}&email=${encodeURIComponent(waitlistEmail)}`;\r\n\r\n//     // Add script to document\r\n//     document.body.appendChild(script);\r\n\r\n//     try {\r\n//       // Wait for response\r\n//       const response = await jsonpPromise;\r\n\r\n//       if (response.result === 'success') {\r\n//         setSubmitStatus(\"Thank you for joining our waitlist!\");\r\n//         setWaitlistEmail('');\r\n//       } else if (response.result === 'duplicate') {\r\n//         setSubmitStatus(\"This email is already registered!\");\r\n//       } else {\r\n//         setSubmitStatus(\"There was an error. Please try again.\");\r\n//       }\r\n//     } catch (error) {\r\n//       console.error('Error:', error);\r\n//       setSubmitStatus(\"There was an error. Please try again.\");\r\n//     } finally {\r\n//       setIsSubmitting(false);\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div>\r\n//       <div id=\"contact\">\r\n//         <div className=\"container\">\r\n//           <div className=\"col-md-8\">\r\n//             <div className=\"row\">\r\n//               <div className=\"section-title\">\r\n//                 <h2>Join Our Waitlist</h2>\r\n//                 <p>\r\n//                   Be the first to know when we launch! Sign up below to stay updated\r\n//                   on our latest developments and early access opportunities.\r\n//                 </p>\r\n//               </div>\r\n//               <form className=\"waitlist-form\" onSubmit={handleWaitlistSubmit}>\r\n//                 <div className=\"form-group\">\r\n//                   <input\r\n//                     type=\"email\"\r\n//                     className=\"form-control\"\r\n//                     placeholder=\"Enter your email\"\r\n//                     value={waitlistEmail}\r\n//                     onChange={(e) => setWaitlistEmail(e.target.value)}\r\n//                     disabled={isSubmitting}\r\n//                     required\r\n//                   />\r\n//                   {submitStatus && (\r\n//                     <p className={`status-message ${submitStatus.includes(\"Thank you\") ? \"success\" : \"error\"\r\n//                       }`}>\r\n//                       {submitStatus}\r\n//                     </p>\r\n//                   )}\r\n//                 </div>\r\n//                 <button\r\n//                   type=\"submit\"\r\n//                   className=\"btn btn-custom btn-lg\"\r\n//                   disabled={isSubmitting}\r\n//                 >\r\n//                   {isSubmitting ? \"Signing up...\" : \"Sign Up for Waitlist\"}\r\n//                 </button>\r\n//               </form>\r\n//             </div>\r\n//           </div>\r\n// <div className=\"col-md-3 col-md-offset-1 contact-info\">\r\n//   <div className=\"contact-item\">\r\n//     <h3>Contact Info</h3>\r\n//     <p>\r\n//       <span>\r\n//         <i className=\"fa fa-map-marker\"></i> Address\r\n//       </span>\r\n//       {props.data ? props.data.address : \"loading\"}\r\n//     </p>\r\n//   </div>\r\n//   <div className=\"contact-item\">\r\n//     <p>\r\n//       <span>\r\n//         <i className=\"fa fa-envelope-o\"></i> Email\r\n//       </span>{\" \"}\r\n//       {props.data ? props.data.email : \"loading\"}\r\n//     </p>\r\n//   </div>\r\n// </div>\r\n// <div className=\"col-md-12\">\r\n//   <div className=\"row\">\r\n//     <div className=\"social\">\r\n//       <ul>\r\n//         <li>\r\n//           <a\r\n//             href={props.data ? props.data.linkedin : \"/\"}\r\n//             target=\"_blank\"\r\n//             rel=\"noopener noreferrer\"\r\n//           >\r\n//             <i className=\"fa fa-linkedin\"></i>\r\n//           </a>\r\n//         </li>\r\n//         <li>\r\n//           <a\r\n//             href={props.data ? props.data.researchgate : \"/\"}\r\n//             target=\"_blank\"\r\n//             rel=\"noopener noreferrer\"\r\n//           >\r\n//             <i className=\"fab fa-researchgate\"></i>\r\n//           </a>\r\n//         </li>\r\n//       </ul>\r\n//     </div>\r\n//   </div>\r\n// </div>\r\n//   </div>\r\n// </div>\r\n//       <div id=\"footer\">\r\n//         <div className=\"container\">\r\n//           <div className=\"row\">\r\n//             <div className=\"col-md-4\">\r\n//               <p>&copy; 2024 Kausal Spin-out University of Sheffield</p>\r\n//             </div>\r\n//             <div className=\"col-md-8\">\r\n//               <div className=\"footer-logos\">\r\n//                 <img\r\n//                   src=\"img/footer/uos-logo.png\"\r\n//                   alt=\"University of Sheffield\"\r\n//                   className=\"footer-logo\"\r\n//                 />\r\n//                 <img\r\n//                   src=\"img/footer/icure-logo.png\"\r\n//                   alt=\"ICure Programme\"\r\n//                   className=\"footer-logo\"\r\n//                 />\r\n//               </div>\r\n//             </div>\r\n//           </div>\r\n//         </div>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\nimport { useState } from \"react\";\r\n\r\nexport const Contact = (props) => {\r\n  const [formData, setFormData] = useState({\r\n    name: \"\",\r\n    email: \"\",\r\n    source: \"Select an option\", // Default value matches first option\r\n  });\r\n  const [submitStatus, setSubmitStatus] = useState(\"\");\r\n  const [isSubmitting, setIsSubmitting] = useState(false);\r\n\r\n  const sourceOptions = [\r\n    \"Select an option\",\r\n    \"LinkedIn\",\r\n    \"University\",\r\n    \"Word of Mouth\",\r\n    \"Search Engine\",\r\n    \"Exhibition or Tradeshow\",\r\n    \"Other\"\r\n  ];\r\n\r\n  const handleWaitlistSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    // Validate source selection\r\n    if (formData.source === \"Select an option\") {\r\n      setSubmitStatus(\"Please select where you heard about us\");\r\n      return;\r\n    }\r\n\r\n    setSubmitStatus(\"\");\r\n    setIsSubmitting(true);\r\n\r\n    const callbackName = 'jsonpCallback' + Date.now();\r\n    const script = document.createElement('script');\r\n    const scriptURL = 'https://script.google.com/macros/s/AKfycbyJjgWJnc72PBIXvek0BSaKV0-oC0f-WOzzIJCRrCVS9ExdmwabGHlz2o5AZS1Ne9fzOg/exec'; // Replace with your actual script URL\r\n\r\n    const jsonpPromise = new Promise((resolve, reject) => {\r\n      window[callbackName] = (response) => {\r\n        resolve(response);\r\n        delete window[callbackName];\r\n        document.body.removeChild(script);\r\n      };\r\n\r\n      script.onerror = () => {\r\n        reject(new Error('Script load failed'));\r\n        delete window[callbackName];\r\n        document.body.removeChild(script);\r\n      };\r\n    });\r\n\r\n    const params = new URLSearchParams({\r\n      callback: callbackName,\r\n      email: formData.email.trim(),\r\n      name: formData.name.trim(),\r\n      source: formData.source\r\n    });\r\n\r\n    script.src = `${scriptURL}?${params.toString()}`;\r\n    document.body.appendChild(script);\r\n\r\n    try {\r\n      const response = await jsonpPromise;\r\n\r\n      if (response.result === 'success') {\r\n        setSubmitStatus(\"Thank you for joining our waitlist!\");\r\n        setFormData({\r\n          name: \"\",\r\n          email: \"\",\r\n          source: \"Select an option\"\r\n        });\r\n      } else if (response.result === 'duplicate') {\r\n        setSubmitStatus(\"This email is already registered!\");\r\n      } else {\r\n        setSubmitStatus(\"There was an error. Please try again.\");\r\n      }\r\n    } catch (error) {\r\n      console.error('Error:', error);\r\n      setSubmitStatus(\"There was an error. Please try again.\");\r\n    } finally {\r\n      setIsSubmitting(false);\r\n    }\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData(prev => ({\r\n      ...prev,\r\n      [name]: value\r\n    }));\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div id=\"contact\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-8\">\r\n              <div className=\"section-title\">\r\n                <h2>Join Our Waitlist</h2>\r\n                <p>\r\n                  Be the first to know when we launch! Sign up below to stay updated\r\n                  on our latest developments and early access opportunities.\r\n                </p>\r\n              </div>\r\n              <form className=\"waitlist-form\" onSubmit={handleWaitlistSubmit}>\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"name\">Name:</label>\r\n\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    placeholder=\"Your Name\"\r\n                    name=\"name\"\r\n                    value={formData.name}\r\n                    onChange={handleChange}\r\n                    disabled={isSubmitting}\r\n                    required\r\n                  />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"email\">Email Address:</label>\r\n\r\n                  <input\r\n                    type=\"email\"\r\n                    className=\"form-control\"\r\n                    placeholder=\"Your Email\"\r\n                    name=\"email\"\r\n                    value={formData.email}\r\n                    onChange={handleChange}\r\n                    disabled={isSubmitting}\r\n                    required\r\n                  />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"source\">How did you hear about Kausal?</label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    name=\"source\"\r\n                    value={formData.source}\r\n                    placeholder=\"How did you hear about us?\"\r\n                    onChange={handleChange}\r\n                    disabled={isSubmitting}\r\n                    required\r\n                  >\r\n                    {sourceOptions.map((option, index) => (\r\n                      <option\r\n                        key={index}\r\n                        value={option}\r\n                        disabled={index === 0}\r\n                      >\r\n                        {option}\r\n                      </option>\r\n                    ))}\r\n                  </select>\r\n                </div>\r\n                {submitStatus && (\r\n                  <div className={`status-message ${submitStatus.includes(\"Thank you\") ? \"success\" : \"error\"\r\n                    }`}>\r\n                    {submitStatus}\r\n                  </div>\r\n                )}\r\n                <button\r\n                  type=\"submit\"\r\n                  className=\"btn btn-custom btn-lg\"\r\n                  disabled={isSubmitting}\r\n                >\r\n                  {isSubmitting ? \"Signing up...\" : \"Sign Up for Waitlist\"}\r\n                </button>\r\n              </form>\r\n            </div>\r\n\r\n            <div className=\"col-md-3 col-md-offset-1 contact-info\">\r\n              <div className=\"contact-item\">\r\n                <h3>Contact Info</h3>\r\n                <p>\r\n                  <span>\r\n                    <i className=\"fa fa-map-marker\"></i> Address\r\n                  </span>\r\n                  {props.data ? props.data.address : \"loading\"}\r\n                </p>\r\n              </div>\r\n              <div className=\"contact-item\">\r\n                <p>\r\n                  <span>\r\n                    <i className=\"fa fa-envelope-o\"></i> Email\r\n                  </span>{\" \"}\r\n                  {props.data ? props.data.email : \"loading\"}\r\n                </p>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"col-md-12\">\r\n              <div className=\"row\">\r\n                <div className=\"social\">\r\n                  <ul>\r\n                    <li>\r\n                      <a\r\n                        href={props.data ? props.data.linkedin : \"/\"}\r\n                        target=\"_blank\"\r\n                        rel=\"noopener noreferrer\"\r\n                      >\r\n                        <i className=\"fa fa-linkedin\"></i>\r\n                      </a>\r\n                    </li>\r\n                    <li>\r\n                      <a\r\n                        href={props.data ? props.data.researchgate : \"/\"}\r\n                        target=\"_blank\"\r\n                        rel=\"noopener noreferrer\"\r\n                      >\r\n                        <i className=\"fab fa-researchgate\"></i>\r\n                      </a>\r\n                    </li>\r\n                  </ul>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div >\r\n\r\n      <footer id=\"footer\">\r\n        <div className=\"container\">\r\n          <div className=\"footer-content\">\r\n            <div className=\"footer-logos\">\r\n              <img\r\n                src=\"img/footer/uos-logo-2.png\"\r\n                alt=\"University of Sheffield\"\r\n                className=\"footer-logo\"\r\n              />\r\n              <img\r\n                src=\"img/footer/icure-logo.png\"\r\n                alt=\"ICure Programme\"\r\n                className=\"footer-logo\"\r\n              />\r\n            </div>\r\n            <div className=\"footer-text\">\r\n              <p color=\"#070707\">&copy; 2024 Kausal Spin-out University of Sheffield</p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </footer>\r\n    </div >\r\n  );\r\n};","import React from \"react\";\r\nimport Particles from \"react-tsparticles\";\r\nimport { loadFull } from \"tsparticles\";\r\n\r\nconst Background = () => {\r\n  const particlesInit = async (main) => {\r\n    await loadFull(main);\r\n  };\r\n\r\n  const particlesLoaded = (container) => {\r\n    console.log(container); // we want the particles to fit inside a predetermined container\r\n  };\r\n\r\n  const options = {\r\n    background: {\r\n      color: {\r\n        value: \"#f5f5f5\",\r\n      },\r\n    },\r\n    fpsLimit: 120,\r\n    interactivity: {\r\n      events: {\r\n        onHover: {\r\n          enable: true,\r\n          mode: \"repulse\",\r\n        },\r\n        resize: true,\r\n      },\r\n      modes: {\r\n        push: {\r\n          quantity: 2,\r\n        },\r\n        repulse: {\r\n          distance: 200,\r\n          duration: 0.4,\r\n          maxSpeed: 4,\r\n          speed: 2,\r\n        },\r\n      },\r\n    },\r\n    particles: {\r\n      color: {\r\n        value: \"#393e41\",\r\n      },\r\n      links: {\r\n        color: \"#393e41\",\r\n        distance: 150,\r\n        enable: true,\r\n        opacity: 0.5,\r\n        width: 1.5,\r\n      },\r\n      fullScreen: true,\r\n      collisions: {\r\n        enable: false,\r\n      },\r\n      move: {\r\n        direction: \"none\",\r\n        enable: true,\r\n        outModes: {\r\n          default: \"bounce\",\r\n        },\r\n        random: false,\r\n        speed: 1,\r\n        straight: false,\r\n      },\r\n      number: {\r\n        density: {\r\n          enable: true,\r\n          area: 1000,\r\n        },\r\n        value: 80,\r\n      },\r\n      opacity: {\r\n        value: 0.5,\r\n      },\r\n      shape: {\r\n        type: \"hexagon\",\r\n      },\r\n      size: {\r\n        value: { min: 1, max: 10 },\r\n      },\r\n    },\r\n    detectRetina: true,\r\n  };\r\n\r\n  return <Particles id=\"tsparticles\" init={particlesInit} options={options} />;\r\n};\r\n\r\nexport default Background;\r\n","import { useState, useEffect } from \"react\";\r\nimport { Navigation } from \"./components/navigation\";\r\nimport { Header } from \"./components/header\";\r\nimport { Mission } from \"./components/mission\";\r\nimport { About } from \"./components/about\";\r\nimport { Services } from \"./components/services\";\r\nimport { Gallery } from \"./components/gallery\";\r\nimport { Testimonials } from \"./components/testimonials\";\r\nimport { Team } from \"./components/Team\";\r\nimport { Contact } from \"./components/contact\";\r\nimport JsonData from \"./data/data.json\";\r\nimport SmoothScroll from \"smooth-scroll\";\r\nimport \"./App.css\";\r\nimport Background from \"./components/node-background/background\";\r\nimport React from 'react'\r\nimport { useIntersectionObserver } from \"./useIntersectionObserver\";\r\n\r\n\r\nexport const scroll = new SmoothScroll('a[href*=\"#\"]', {\r\n  speed: 1000,\r\n  speedAsDuration: true,\r\n});\r\n\r\nconst App = () => {\r\n\r\n  const [landingPageData, setLandingPageData] = useState({});\r\n  useEffect(() => {\r\n    setLandingPageData(JsonData);\r\n  }, []);\r\n\r\n  useIntersectionObserver();\r\n\r\n  return (\r\n    <div>\r\n      <Background />\r\n      <Navigation data={landingPageData.menu} />\r\n      <Header data={landingPageData.Header} />\r\n      <Mission data={landingPageData.Features} />\r\n      <About data={landingPageData.About} />\r\n      <Team data={landingPageData.Team} />\r\n      <Contact data={landingPageData.Contact} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import { useEffect } from 'react';\r\n\r\nexport const useIntersectionObserver = () => {\r\n  useEffect(() => {\r\n    const observerOptions = {\r\n      threshold: 0.2\r\n    };\r\n\r\n    const observer = new IntersectionObserver((entries) => {\r\n      entries.forEach(entry => {\r\n        if (entry.isIntersecting) {\r\n          entry.target.classList.add('visible');\r\n        }\r\n      });\r\n    }, observerOptions);\r\n\r\n    const sections = document.querySelectorAll('.section-title');\r\n    sections.forEach(section => {\r\n      observer.observe(section);\r\n    });\r\n\r\n    // Cleanup function\r\n    return () => {\r\n      sections.forEach(section => {\r\n        observer.unobserve(section);\r\n      });\r\n    };\r\n  }, []); // Empty dependency array means this runs once on mount\r\n};","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","export default __webpack_public_path__ + \"static/media/quint_lower.1a551845.ttf\";","export default __webpack_public_path__ + \"static/media/quint-uppercase-font.d84b2b1a.otf\";","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n// IMPORT FONTS\r\nimport \"./fonts/quint_lower.ttf\";\r\nimport \"./fonts/quint-uppercase-font.otf\";\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}